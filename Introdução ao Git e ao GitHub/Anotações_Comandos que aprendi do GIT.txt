Comandos básicos para um bom desempenho no terminal

1. Prompt de Comando (Windows): Windows>CMD

Listar as pastas:  DIR>enter (Saber qual pasta estamos)
Mudar de pastas: cd/  (cd + nome pasta)
Retroceder a pasta: cd.. (volta para pasta mãe)
Criar pastas/arquivos: mkdir + nome pasta
Echo (devolve o que escrevemos, para criar um arquivo): echo nome > nome.txt (exemplo)
Deletar arquivos: del + nome arquivo (ou nome da pasta e deleta o que ela contem, mas não a pasta)
Deletar pasta com tudo: rmdir + nome pasta /S /Q
Limpar tela: cls
TAB: autocompleta

2. Link para download do Git: https://git-scm.com/downloads
O Git Bash é um terminal extendido para otimizar o uso do Git.

3. Comandos (GIT):

sha1 (40 caracteres): openssl sha1 + nome arquivo
Registro de chave ssh: ssh-keygen -t ed25519 -c +email
gera par de chaves pública e privada
Vai até a pasta para ver as chaves
cd / c/users/nome usuario/.ssh/
liste: ls para ver as chaves
Incluir no GitHub é a pública sempre
No GitHub em SSH Keys dá um título e coloca a chave.

4. Primeiros comandos do GIT

git init: para iniciar o git (status master) - inicializa o repositório
ls : lista itens de um repositório
ls -a: mostra itens ocultos
git config --global user.email "+ email" (ajuste de configuração global, pode ser feita de forma específica se preciso)
git config --global user.name "+ name" (ajuste de configuração global, pode ser feita de forma específica se preciso)
arquivo Markdown (mais fácil que HTML)
git add * : inclui todas alterações
git status: diz se teve alguma alteração para commit
git commit -m "texto explicando o commit" : commit identificado pelo texto



5. GitHub

- Aprendi a criar repositório
- git remote add origin + https:xxxx (dando apelido para o repositório)
- git remote -v (lista de repositório que tenho cadastrado)
- git push (adicionar arquivos do Git para GitHub)


